///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace License
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Recording1 recording.
    /// </summary>
    [TestModule("06660ddd-4342-4391-bbe3-79188d53be14", ModuleType.Recording, 1)]
    public partial class Recording1 : ITestModule
    {
        /// <summary>
        /// Holds an instance of the LicenseRepository repository.
        /// </summary>
        public static LicenseRepository repo = LicenseRepository.Instance;

        static Recording1 instance = new Recording1();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Recording1()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Recording1 Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "7.0")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "7.0")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 500;
            Keyboard.DefaultKeyPressTime = 200;
            Delay.SpeedFactor = 2.00;

            Init();

            //Report.Log(ReportLevel.Info, "Application", "Run application 'C:\\QVI\\Snap-X\\SnapXOffline.bat' with arguments '' in normal mode.", new RecordItemIndex(0));
            //Host.Local.RunApplication("C:\\QVI\\Snap-X\\SnapXOffline.bat", "", "C:\\QVI\\Snap-X", false);
            //Delay.Milliseconds(0);

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SnapXUntitled.Element94' at 320;17.", repo.SnapXUntitled.Element94Info, new RecordItemIndex(0));
            repo.SnapXUntitled.Element94.Click("320;17");
            Delay.Milliseconds(200);

            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LMenu}'.", new RecordItemIndex(2));
            Keyboard.Press("{LMenu}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'h'.", new RecordItemIndex(3));
            Keyboard.Press("h");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'a'.", new RecordItemIndex(4));
            Keyboard.Press("a");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'AboutSNAPX.HelpAbout' at 249;64.", repo.AboutSNAPX.HelpAboutInfo, new RecordItemIndex(5));
            repo.AboutSNAPX.HelpAbout.Click("249;64");
            Delay.Milliseconds(200);

            string strCheckLicense = ((License.LicenseRepositoryFolders.AboutSNAPXAppFolder)repo.AboutSNAPX.HelpAboutInfo.ParentFolder).HelpAbout.TextValue;
            UtilityLicense.SentinelID(strCheckLicense);
            Delay.Milliseconds(200);

            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Escape}'.", new RecordItemIndex(6));
            Keyboard.Press("{Escape}");
            Delay.Milliseconds(0);

            Host.Current.CloseApplication(repo.SnapXUntitled.Self, new Duration(100));
            Delay.Milliseconds(100);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
